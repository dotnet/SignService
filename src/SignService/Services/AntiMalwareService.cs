using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;

namespace SignService.Services
{
    public interface IAntiMalwareService
    {
        bool Scan(string direinputctory);
    }

    public class AntiMalwareService : IAntiMalwareService
    {
        readonly ILogger<AntiMalwareService> logger;
        readonly IFileNameService fileNameService;

        public AntiMalwareService(ILogger<AntiMalwareService> logger, IFileNameService fileNameService)
        {
            this.logger = logger;
            this.fileNameService = fileNameService;
        }

        public bool Scan(string input)
        {       

            // TODO: Get location from registry

            logger.LogInformation("Beginning Antimalware scan for {directory}, from {source}", input, fileNameService.GetFileName(input));

            var psi = new ProcessStartInfo
            {
                FileName = @"D:\Program Files\Windows Defender\MpCmdRun.exe",
                Arguments = $"-Scan -ScanType 3 -DisableRemediation -File \"{input}\"",
                UseShellExecute = false,
                RedirectStandardOutput = true
            };
            using var process = Process.Start(psi);

            var output = process.StandardOutput.ReadToEnd();

            process.WaitForExit(60 * 1000); // 60 seconds max

            var success = process.ExitCode == 0;

            logger.LogInformation("Completed Antimalware scan with result '{exitCode}'", process.ExitCode);
            logger.LogInformation("Output: {output}", output);

            return success;
        }
    }
}
